/*
 * This code has been automatically generated by testgen.
 * Do NOT edit or append.
 */

using Aas = AasCore.Aas3_0;  // renamed
using Path = System.IO.Path;

namespace AasCore.Aas3_0.Tests
{
    /// <summary>
    /// Provide methods to load instances from JSON test data.
    /// </summary>
    public static class CommonJsonization
    {
        public static Aas.Extension LoadMaximalExtension()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Extension",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Extension>(
               container);
    
            return instance;
        }  // public static Aas.Extension LoadMaximalExtension

        public static Aas.Extension LoadMinimalExtension()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Extension",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Extension>(
               container);
    
            return instance;
        }  // public static Aas.Extension LoadMinimalExtension

        public static Aas.AdministrativeInformation LoadMaximalAdministrativeInformation()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "AdministrativeInformation",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.AdministrativeInformation>(
               container);
    
            return instance;
        }  // public static Aas.AdministrativeInformation LoadMaximalAdministrativeInformation

        public static Aas.AdministrativeInformation LoadMinimalAdministrativeInformation()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "AdministrativeInformation",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.AdministrativeInformation>(
               container);
    
            return instance;
        }  // public static Aas.AdministrativeInformation LoadMinimalAdministrativeInformation

        public static Aas.Qualifier LoadMaximalQualifier()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Qualifier",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Qualifier>(
               container);
    
            return instance;
        }  // public static Aas.Qualifier LoadMaximalQualifier

        public static Aas.Qualifier LoadMinimalQualifier()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Qualifier",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Qualifier>(
               container);
    
            return instance;
        }  // public static Aas.Qualifier LoadMinimalQualifier

        public static Aas.AssetAdministrationShell LoadMaximalAssetAdministrationShell()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "AssetAdministrationShell",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.AssetAdministrationShell>(
               container);
    
            return instance;
        }  // public static Aas.AssetAdministrationShell LoadMaximalAssetAdministrationShell

        public static Aas.AssetAdministrationShell LoadMinimalAssetAdministrationShell()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "AssetAdministrationShell",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.AssetAdministrationShell>(
               container);
    
            return instance;
        }  // public static Aas.AssetAdministrationShell LoadMinimalAssetAdministrationShell

        public static Aas.AssetInformation LoadMaximalAssetInformation()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "AssetInformation",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.AssetInformation>(
               container);
    
            return instance;
        }  // public static Aas.AssetInformation LoadMaximalAssetInformation

        public static Aas.AssetInformation LoadMinimalAssetInformation()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "AssetInformation",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.AssetInformation>(
               container);
    
            return instance;
        }  // public static Aas.AssetInformation LoadMinimalAssetInformation

        public static Aas.Resource LoadMaximalResource()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Resource",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Resource>(
               container);
    
            return instance;
        }  // public static Aas.Resource LoadMaximalResource

        public static Aas.Resource LoadMinimalResource()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Resource",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Resource>(
               container);
    
            return instance;
        }  // public static Aas.Resource LoadMinimalResource

        public static Aas.SpecificAssetId LoadMaximalSpecificAssetId()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "SpecificAssetId",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.SpecificAssetId>(
               container);
    
            return instance;
        }  // public static Aas.SpecificAssetId LoadMaximalSpecificAssetId

        public static Aas.SpecificAssetId LoadMinimalSpecificAssetId()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "SpecificAssetId",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.SpecificAssetId>(
               container);
    
            return instance;
        }  // public static Aas.SpecificAssetId LoadMinimalSpecificAssetId

        public static Aas.Submodel LoadMaximalSubmodel()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Submodel",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Submodel>(
               container);
    
            return instance;
        }  // public static Aas.Submodel LoadMaximalSubmodel

        public static Aas.Submodel LoadMinimalSubmodel()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Submodel",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Submodel>(
               container);
    
            return instance;
        }  // public static Aas.Submodel LoadMinimalSubmodel

        public static Aas.RelationshipElement LoadMaximalRelationshipElement()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "RelationshipElement",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.RelationshipElement>(
               container);
    
            return instance;
        }  // public static Aas.RelationshipElement LoadMaximalRelationshipElement

        public static Aas.RelationshipElement LoadMinimalRelationshipElement()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "RelationshipElement",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.RelationshipElement>(
               container);
    
            return instance;
        }  // public static Aas.RelationshipElement LoadMinimalRelationshipElement

        public static Aas.SubmodelElementList LoadMaximalSubmodelElementList()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "SubmodelElementList",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.SubmodelElementList>(
               container);
    
            return instance;
        }  // public static Aas.SubmodelElementList LoadMaximalSubmodelElementList

        public static Aas.SubmodelElementList LoadMinimalSubmodelElementList()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "SubmodelElementList",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.SubmodelElementList>(
               container);
    
            return instance;
        }  // public static Aas.SubmodelElementList LoadMinimalSubmodelElementList

        public static Aas.SubmodelElementCollection LoadMaximalSubmodelElementCollection()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "SubmodelElementCollection",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.SubmodelElementCollection>(
               container);
    
            return instance;
        }  // public static Aas.SubmodelElementCollection LoadMaximalSubmodelElementCollection

        public static Aas.SubmodelElementCollection LoadMinimalSubmodelElementCollection()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "SubmodelElementCollection",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.SubmodelElementCollection>(
               container);
    
            return instance;
        }  // public static Aas.SubmodelElementCollection LoadMinimalSubmodelElementCollection

        public static Aas.Property LoadMaximalProperty()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Property",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Property>(
               container);
    
            return instance;
        }  // public static Aas.Property LoadMaximalProperty

        public static Aas.Property LoadMinimalProperty()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Property",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Property>(
               container);
    
            return instance;
        }  // public static Aas.Property LoadMinimalProperty

        public static Aas.MultiLanguageProperty LoadMaximalMultiLanguageProperty()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "MultiLanguageProperty",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.MultiLanguageProperty>(
               container);
    
            return instance;
        }  // public static Aas.MultiLanguageProperty LoadMaximalMultiLanguageProperty

        public static Aas.MultiLanguageProperty LoadMinimalMultiLanguageProperty()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "MultiLanguageProperty",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.MultiLanguageProperty>(
               container);
    
            return instance;
        }  // public static Aas.MultiLanguageProperty LoadMinimalMultiLanguageProperty

        public static Aas.Range LoadMaximalRange()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Range",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Range>(
               container);
    
            return instance;
        }  // public static Aas.Range LoadMaximalRange

        public static Aas.Range LoadMinimalRange()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Range",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Range>(
               container);
    
            return instance;
        }  // public static Aas.Range LoadMinimalRange

        public static Aas.ReferenceElement LoadMaximalReferenceElement()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "ReferenceElement",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.ReferenceElement>(
               container);
    
            return instance;
        }  // public static Aas.ReferenceElement LoadMaximalReferenceElement

        public static Aas.ReferenceElement LoadMinimalReferenceElement()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "ReferenceElement",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.ReferenceElement>(
               container);
    
            return instance;
        }  // public static Aas.ReferenceElement LoadMinimalReferenceElement

        public static Aas.Blob LoadMaximalBlob()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Blob",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Blob>(
               container);
    
            return instance;
        }  // public static Aas.Blob LoadMaximalBlob

        public static Aas.Blob LoadMinimalBlob()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Blob",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Blob>(
               container);
    
            return instance;
        }  // public static Aas.Blob LoadMinimalBlob

        public static Aas.File LoadMaximalFile()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "File",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.File>(
               container);
    
            return instance;
        }  // public static Aas.File LoadMaximalFile

        public static Aas.File LoadMinimalFile()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "File",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.File>(
               container);
    
            return instance;
        }  // public static Aas.File LoadMinimalFile

        public static Aas.AnnotatedRelationshipElement LoadMaximalAnnotatedRelationshipElement()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "AnnotatedRelationshipElement",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.AnnotatedRelationshipElement>(
               container);
    
            return instance;
        }  // public static Aas.AnnotatedRelationshipElement LoadMaximalAnnotatedRelationshipElement

        public static Aas.AnnotatedRelationshipElement LoadMinimalAnnotatedRelationshipElement()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "AnnotatedRelationshipElement",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.AnnotatedRelationshipElement>(
               container);
    
            return instance;
        }  // public static Aas.AnnotatedRelationshipElement LoadMinimalAnnotatedRelationshipElement

        public static Aas.Entity LoadMaximalEntity()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Entity",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Entity>(
               container);
    
            return instance;
        }  // public static Aas.Entity LoadMaximalEntity

        public static Aas.Entity LoadMinimalEntity()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Entity",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Entity>(
               container);
    
            return instance;
        }  // public static Aas.Entity LoadMinimalEntity

        public static Aas.EventPayload LoadMaximalEventPayload()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "SelfContained",
                "Expected",
                "EventPayload",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var instance = Aas.Jsonization.Deserialize.EventPayloadFrom(
               node);
    
            return instance;
        }  // public static Aas.EventPayload LoadMaximalEventPayload

        public static Aas.EventPayload LoadMinimalEventPayload()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "SelfContained",
                "Expected",
                "EventPayload",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var instance = Aas.Jsonization.Deserialize.EventPayloadFrom(
               node);
    
            return instance;
        }  // public static Aas.EventPayload LoadMinimalEventPayload

        public static Aas.BasicEventElement LoadMaximalBasicEventElement()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "BasicEventElement",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.BasicEventElement>(
               container);
    
            return instance;
        }  // public static Aas.BasicEventElement LoadMaximalBasicEventElement

        public static Aas.BasicEventElement LoadMinimalBasicEventElement()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "BasicEventElement",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.BasicEventElement>(
               container);
    
            return instance;
        }  // public static Aas.BasicEventElement LoadMinimalBasicEventElement

        public static Aas.Operation LoadMaximalOperation()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Operation",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Operation>(
               container);
    
            return instance;
        }  // public static Aas.Operation LoadMaximalOperation

        public static Aas.Operation LoadMinimalOperation()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Operation",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Operation>(
               container);
    
            return instance;
        }  // public static Aas.Operation LoadMinimalOperation

        public static Aas.OperationVariable LoadMaximalOperationVariable()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "OperationVariable",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.OperationVariable>(
               container);
    
            return instance;
        }  // public static Aas.OperationVariable LoadMaximalOperationVariable

        public static Aas.OperationVariable LoadMinimalOperationVariable()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "OperationVariable",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.OperationVariable>(
               container);
    
            return instance;
        }  // public static Aas.OperationVariable LoadMinimalOperationVariable

        public static Aas.Capability LoadMaximalCapability()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Capability",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Capability>(
               container);
    
            return instance;
        }  // public static Aas.Capability LoadMaximalCapability

        public static Aas.Capability LoadMinimalCapability()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Capability",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Capability>(
               container);
    
            return instance;
        }  // public static Aas.Capability LoadMinimalCapability

        public static Aas.ConceptDescription LoadMaximalConceptDescription()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "ConceptDescription",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.ConceptDescription>(
               container);
    
            return instance;
        }  // public static Aas.ConceptDescription LoadMaximalConceptDescription

        public static Aas.ConceptDescription LoadMinimalConceptDescription()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "ConceptDescription",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.ConceptDescription>(
               container);
    
            return instance;
        }  // public static Aas.ConceptDescription LoadMinimalConceptDescription

        public static Aas.Reference LoadMaximalReference()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Reference",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Reference>(
               container);
    
            return instance;
        }  // public static Aas.Reference LoadMaximalReference

        public static Aas.Reference LoadMinimalReference()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Reference",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Reference>(
               container);
    
            return instance;
        }  // public static Aas.Reference LoadMinimalReference

        public static Aas.Key LoadMaximalKey()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Key",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Key>(
               container);
    
            return instance;
        }  // public static Aas.Key LoadMaximalKey

        public static Aas.Key LoadMinimalKey()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "Key",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.Key>(
               container);
    
            return instance;
        }  // public static Aas.Key LoadMinimalKey

        public static Aas.LangStringNameType LoadMaximalLangStringNameType()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "LangStringNameType",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.LangStringNameType>(
               container);
    
            return instance;
        }  // public static Aas.LangStringNameType LoadMaximalLangStringNameType

        public static Aas.LangStringNameType LoadMinimalLangStringNameType()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "LangStringNameType",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.LangStringNameType>(
               container);
    
            return instance;
        }  // public static Aas.LangStringNameType LoadMinimalLangStringNameType

        public static Aas.LangStringTextType LoadMaximalLangStringTextType()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "LangStringTextType",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.LangStringTextType>(
               container);
    
            return instance;
        }  // public static Aas.LangStringTextType LoadMaximalLangStringTextType

        public static Aas.LangStringTextType LoadMinimalLangStringTextType()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "LangStringTextType",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.LangStringTextType>(
               container);
    
            return instance;
        }  // public static Aas.LangStringTextType LoadMinimalLangStringTextType

        public static Aas.Environment LoadMaximalEnvironment()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "SelfContained",
                "Expected",
                "Environment",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var instance = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);
    
            return instance;
        }  // public static Aas.Environment LoadMaximalEnvironment

        public static Aas.Environment LoadMinimalEnvironment()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "SelfContained",
                "Expected",
                "Environment",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var instance = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);
    
            return instance;
        }  // public static Aas.Environment LoadMinimalEnvironment

        public static Aas.EmbeddedDataSpecification LoadMaximalEmbeddedDataSpecification()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "EmbeddedDataSpecification",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.EmbeddedDataSpecification>(
               container);
    
            return instance;
        }  // public static Aas.EmbeddedDataSpecification LoadMaximalEmbeddedDataSpecification

        public static Aas.EmbeddedDataSpecification LoadMinimalEmbeddedDataSpecification()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "EmbeddedDataSpecification",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.EmbeddedDataSpecification>(
               container);
    
            return instance;
        }  // public static Aas.EmbeddedDataSpecification LoadMinimalEmbeddedDataSpecification

        public static Aas.LevelType LoadMaximalLevelType()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "LevelType",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.LevelType>(
               container);
    
            return instance;
        }  // public static Aas.LevelType LoadMaximalLevelType

        public static Aas.LevelType LoadMinimalLevelType()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "LevelType",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.LevelType>(
               container);
    
            return instance;
        }  // public static Aas.LevelType LoadMinimalLevelType

        public static Aas.ValueReferencePair LoadMaximalValueReferencePair()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "ValueReferencePair",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.ValueReferencePair>(
               container);
    
            return instance;
        }  // public static Aas.ValueReferencePair LoadMaximalValueReferencePair

        public static Aas.ValueReferencePair LoadMinimalValueReferencePair()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "ValueReferencePair",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.ValueReferencePair>(
               container);
    
            return instance;
        }  // public static Aas.ValueReferencePair LoadMinimalValueReferencePair

        public static Aas.ValueList LoadMaximalValueList()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "ValueList",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.ValueList>(
               container);
    
            return instance;
        }  // public static Aas.ValueList LoadMaximalValueList

        public static Aas.ValueList LoadMinimalValueList()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "ValueList",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.ValueList>(
               container);
    
            return instance;
        }  // public static Aas.ValueList LoadMinimalValueList

        public static Aas.LangStringPreferredNameTypeIec61360 LoadMaximalLangStringPreferredNameTypeIec61360()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "LangStringPreferredNameTypeIec61360",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.LangStringPreferredNameTypeIec61360>(
               container);
    
            return instance;
        }  // public static Aas.LangStringPreferredNameTypeIec61360 LoadMaximalLangStringPreferredNameTypeIec61360

        public static Aas.LangStringPreferredNameTypeIec61360 LoadMinimalLangStringPreferredNameTypeIec61360()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "LangStringPreferredNameTypeIec61360",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.LangStringPreferredNameTypeIec61360>(
               container);
    
            return instance;
        }  // public static Aas.LangStringPreferredNameTypeIec61360 LoadMinimalLangStringPreferredNameTypeIec61360

        public static Aas.LangStringShortNameTypeIec61360 LoadMaximalLangStringShortNameTypeIec61360()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "LangStringShortNameTypeIec61360",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.LangStringShortNameTypeIec61360>(
               container);
    
            return instance;
        }  // public static Aas.LangStringShortNameTypeIec61360 LoadMaximalLangStringShortNameTypeIec61360

        public static Aas.LangStringShortNameTypeIec61360 LoadMinimalLangStringShortNameTypeIec61360()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "LangStringShortNameTypeIec61360",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.LangStringShortNameTypeIec61360>(
               container);
    
            return instance;
        }  // public static Aas.LangStringShortNameTypeIec61360 LoadMinimalLangStringShortNameTypeIec61360

        public static Aas.LangStringDefinitionTypeIec61360 LoadMaximalLangStringDefinitionTypeIec61360()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "LangStringDefinitionTypeIec61360",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.LangStringDefinitionTypeIec61360>(
               container);
    
            return instance;
        }  // public static Aas.LangStringDefinitionTypeIec61360 LoadMaximalLangStringDefinitionTypeIec61360

        public static Aas.LangStringDefinitionTypeIec61360 LoadMinimalLangStringDefinitionTypeIec61360()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "LangStringDefinitionTypeIec61360",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.LangStringDefinitionTypeIec61360>(
               container);
    
            return instance;
        }  // public static Aas.LangStringDefinitionTypeIec61360 LoadMinimalLangStringDefinitionTypeIec61360

        public static Aas.DataSpecificationIec61360 LoadMaximalDataSpecificationIec61360()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "DataSpecificationIec61360",
                "maximal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.DataSpecificationIec61360>(
               container);
    
            return instance;
        }  // public static Aas.DataSpecificationIec61360 LoadMaximalDataSpecificationIec61360

        public static Aas.DataSpecificationIec61360 LoadMinimalDataSpecificationIec61360()
        {
            string path = Path.Combine(
                Aas.Tests.Common.TestDataDir,
                "Json",
                "ContainedInEnvironment",
                "Expected",
                "DataSpecificationIec61360",
                "minimal.json");

            var node = Aas.Tests.CommonJson.ReadFromFile(path);

            var container = Aas.Jsonization.Deserialize.EnvironmentFrom(
               node);

           var instance = Aas.Tests.Common.MustFind<Aas.DataSpecificationIec61360>(
               container);
    
            return instance;
        }  // public static Aas.DataSpecificationIec61360 LoadMinimalDataSpecificationIec61360
    }  // class CommonJsonization
}  // namespace AasCore.Aas3_0.Tests

/*
 * This code has been automatically generated by testgen.
 * Do NOT edit or append.
 */
